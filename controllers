<?php


namespace app\controllers;


use app\models\Profile;
use app\models\User;
use app\models\UserType;
use Yii;
use yii\helpers\Url;
use yii\web\Controller;

class UserController extends Controller
{
    public function actionCreate()
    {
        $user = new User();
        if(Yii::$app->request->isGet){
            return $this->render('create',compact('user'));
        }
        else if(Yii::$app->request->isPost){
            if($user->load(Yii::$app->request->post()) && $user->validate()){
                $user['password'] = Yii::$app->security->generatePasswordHash($user['password']);
                $user->save();
                if(Yii::$app->request->post('User')['more']) return $this->redirect(['user/create']);
                else return $this->redirect(Url::previous());
            }
            else return $this->render('create',compact('user'));
        }
    }

    public function actionEdit(){
        $user = User::findOne(Yii::$app->request->get('id'));
        if(Yii::$app->request->isGet){
            $title = UserType::findOne($user['user_type_id'])['name'];
            $title = 'Редактирование пользователя "'.$title.'"';
            return $this->render('edit',compact('user','title'));
        }
        else if(Yii::$app->request->isPost){
            if($user->load(Yii::$app->request->post()) && $user->validate()){
                $user->save();
                return $this->redirect(Url::previous());
            }
        }
    }

    public function actionDelete(){
        if(Yii::$app->request->isGet){
            $id = Yii::$app->request->get('id');
            User::findOne($id)->delete();
        }
    }

    public function actionShow(){
        if(Yii::$app->request->isGet){
            $user = User::findOne(Yii::$app->request->get('id'));
            return $this->render('show',compact('user'));
        }
    }

    public function actionProfile(){
        $user = User::findOne(Yii::$app->user->identity->getId());
        $profile = new Profile();
        if(Yii::$app->request->isGet) {
            $profile->name = $user->name;
            $profile->email = $user->email;
            return $this->render('profile', compact('profile'));
        }
        elseif (Yii::$app->request->isPost){
            if($profile->load(Yii::$app->request->post()) && $profile->validate()){
                $user->name = $profile->name;
                $user->email = $profile->email;
                $user->save();
                return $this->redirect(Url::previous());
            }
        }
    }
}
Пример контроллера справочных таблиц
<?php


namespace app\controllers;

use app\models\NameForm;
use app\models\Student;
use Yii;
use yii\db\ActiveRecord;
use yii\helpers\Url;
use yii\web\Controller;
use yii\helpers\ArrayHelper;

class HandbookController extends  Controller
{
    public function actionCommon(){
        return $this->render('common');
    }

    public function actionUniversity(){
        return $this->render('university');
    }

    public function actionCreate()
    {
        $model = new NameForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            Yii::$app->db->createCommand()->insert(Yii::$app->request->get('table'), ['name' => $model->name])->execute();
            $id = Yii::$app->db->lastInsertID;
            $name = $model->name;
            return $this->renderAjax('row',
                [
                    'id'=>$id,
                    'name'=>$name,
                    'table' => Yii::$app->request->get('table'),
                    'actions' => Yii::$app->request->get('actions')
                ]);
        }
    }

    public function actionDelete(){
        Yii::$app->db->createCommand()->delete(Yii::$app->request->get('table'),'id = '.Yii::$app->request->get('id'))->execute();
    }

    public function actionEdit(){
        $model = new NameForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            $table = Yii::$app->request->get('table');
            Yii::$app->db->createCommand()->update($table, ['name'=>$model->name], 'id = ' . Yii::$app->request->get('id'))->execute();
            return $this->renderAjax('row',
                [
                    'id'=>$model->id,
                    'name'=>$model->name,
                    'table'=>$table,
                    'actions' => Yii::$app->request->get('actions')
                ]);
        }
    }
}
